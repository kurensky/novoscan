<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ru.novaris</groupId>
	<artifactId>novoscan</artifactId>
	<packaging>war</packaging>
	<version>1.1.0</version>
	<name>Novoscan :: GWT Form</name>
	<description>Novoscan GWT Form for object monitoring</description>
	<developers>
		<developer>
			<name>Evgeny Kurensky</name>
			<email>kurensky@novaris.ru</email>
		</developer>
	</developers>

	<!-- convenience to define GWT version in one place -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gwtVersion>2.7.0</gwtVersion>
		<geotools.version>13.2</geotools.version>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<!-- GAE properties -->
		<gae.version>1.9.13</gae.version>
		<hibernate.version>5.4.24.Final</hibernate.version>
		<gae.home>${user.home}/.m2/repository/com/google/appengine/appengine-java-sdk/${gae.version}/appengine-java-sdk-${gae.version}</gae.home>
		<gae.application.version>1</gae.application.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt</artifactId>
				<version>${gwtVersion}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>base-common</artifactId>
				<version>${project.version}</version>
				<type>java-source</type>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- GWT -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<!-- ""provided"" so that we don't deploy -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<!-- ""provided"" so that we don't deploy -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-codeserver</artifactId>
			<!-- ""provided"" so that we don't deploy -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.web.bindery</groupId>
			<artifactId>requestfactory-server</artifactId>
		</dependency>
		<!-- Need to run the RF Validation tool. This works on both the command-line 
			and in Eclipse, provided that m2e-apt is installed. -->
		<dependency>
			<groupId>com.google.web.bindery</groupId>
			<artifactId>requestfactory-apt</artifactId>
			<!-- ""provided"" so that we don't deploy -->
			<scope>provided</scope>
		</dependency>
		<!-- RequestFactory will use JSR 303 javax.validation if you let it -->
		<!-- dependency> <groupId>javax.validation</groupId> <artifactId>validation-api</artifactId> 
			</dependency -->
		<!-- Hibernate bean validation source for the GWT client -->
		<!-- Required by Hibernate validator because slf4j-log4j is optional in 
			the hibernate-validator POM -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- Google App Engine (GAE) -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<!-- Objectify for persistence. It uses the stock javax.persistence annotations -->
		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- GIN and Guice for IoC / DI -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
			<version>2.1.2</version>
		</dependency>
		<!-- Use the JSR 330 injection interfaces -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!-- Unit tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Postgresql JDBC -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.4.3</version>
		</dependency>
		<!-- GWT crypto module -->
		<dependency>
			<groupId>com.googlecode.gwt-crypto</groupId>
			<artifactId>gwt-crypto</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.tractionsoftware</groupId>
			<artifactId>gwt-traction</artifactId>
			<version>1.6.0</version>
		</dependency>
		<!-- Openlayers Map module -->
		<dependency>
			<groupId>org.gwtopenmaps.openlayers</groupId>
			<artifactId>gwt-openlayers-client</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>6.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>[2.17.1,)</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.2.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.23.Final</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.4</version>
		</dependency>
		<dependency>
			<groupId>de.micromata.jak</groupId>
			<artifactId>JavaAPIforKml</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-main</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-xml</artifactId>
			<version>11.1</version>
		</dependency>
	</dependencies>
	<build>
		<!-- Output classes directly into the webapp, so that IDEs and ""mvn process-classes"" 
			update them in DevMode -->
		<!-- outputDirectory>war/WEB-INF/classes</outputDirectory> <resources> 
			<resource> <directory>./src</directory> </resource> </resources -->
		<plugins>
			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwtVersion}</version>
				<executions>
					<execution>
						<id>gwt-unitCache</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<!-- Run tests through gwt:test, this allows reusing the plugin configuration 
							for GWTTestCases -->
						<id>gwt-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k </extraJvmArgs>
					<inplace>true</inplace>
					<force>true</force>
					<disableCastChecking>true</disableCastChecking>
					<!-- URL that should be opened by DevMode (gwt:run). -->
					<runTarget>Novoscan.html</runTarget>
					<hostedWebapp>war</hostedWebapp>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
					<compileReport>true</compileReport>
					<compilerMetrics>true</compilerMetrics>
					<modules>
						<module>ru.novaris.novoscan.Novoscan</module>
					</modules>
					<logLevel>INFO</logLevel>
					<style>${gwt.style}</style>
					<!-- Tests patterns -->
					<includes>**/Test*.java,**/*Test.java,**/*TestCase.java</includes>
					<!-- warSourceDirectory>${basedir}/war</warSourceDirectory -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-report-resource</id>
						<phase>compile</phase>
						<configuration>
							<outputDirectory>${basedir}/src/main/webapp/WEB-INF/reports</outputDirectory>
							<encoding>UTF-8</encoding>
							<resources>
								<resource>
									<directory>${basedir}/src/reports</directory>
									<includes>
										<include>**/*.jasper</include>
									</includes>
								</resource>
							</resources>
						</configuration>
						<goals>
							<goal>copy-resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Google App Engine plugin -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.8.1</version>
				<executions>
					<execution>
						<id />
						<phase>validate</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Skip normal test execution, we use gwt:test instead -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}/src/main</directory>
							<includes>
								<include>gwt-unitCache/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
				<executions>
					<execution>
						<id>gwt-unitCache</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- Required by m2e for import into eclipse. No effect on command line 
			builds -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.kindleit</groupId>
										<artifactId>maven-gae-plugin</artifactId>
										<versionRange>[0.7.3,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-resources-plugin
										</artifactId>
										<versionRange>
											[2.5,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>gwt-maven</id>
			<url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/</url>
		</repository>

		<repository>
			<id>objectify-appengine</id>
			<url>http://objectify-appengine.googlecode.com/svn/maven</url>
		</repository>
		<repository>
			<id>google-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/google-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>

	</repositories>
	<pluginRepositories>
		<!-- include pluginRepository and repository for GWT-Maven -->
		<pluginRepository>
			<id>gwt-maven-plugins</id>
			<url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/</url>
		</pluginRepository>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>https://nexus.codehaus.org/content/groups/snapshots-group/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>google-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/google-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<organization>
		<name>Novaris Ltd.</name>
		<url>http://www.novaris.ru</url>
	</organization>
	<url>http://n.novaris.ru:8080/Novoscan</url>
</project>
