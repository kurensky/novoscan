CREATE TABLE SPRV_AREA
 (SPAR_ID INT8 NOT NULL
 ,SPAR_NAME VARCHAR(1024) NOT NULL
 ,SPAR_DT TIMESTAMP NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_AREA.SPAR_DT IS 'Дата создания'
;

COMMENT ON COLUMN SPRV_AREA.SPAR_NAME IS 'Наименование области'
;

CREATE TABLE SPRV_OBJECT_TYPES
 (SPOT_ID INT8 NOT NULL
 ,SPOT_NAME VARCHAR(100) NOT NULL
 ,SPOT_DESC VARCHAR(2048) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_OBJECT_TYPES.SPOT_NAME IS 'Наименование типа'
;

COMMENT ON COLUMN SPRV_OBJECT_TYPES.SPOT_DESC IS 'Описание типа'
;

CREATE TABLE SPRV_CLIENTS
 (SPCL_ID INT8 NOT NULL
 ,SPCL_NAME VARCHAR(100) NOT NULL
 ,SPCL_TYPE INTEGER NOT NULL
 ,SPCL_DESC VARCHAR(1024)
 ,SPCL_SPDP_ID INT8 NOT NULL
 ,SPCL_SPAR_ID INT8
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_CLIENTS.SPCL_NAME IS 'Имя клиента'
;

COMMENT ON COLUMN SPRV_CLIENTS.SPCL_TYPE IS 'Тип клиента'
;

COMMENT ON COLUMN SPRV_CLIENTS.SPCL_DESC IS 'Описание'
;

CREATE TABLE SYS_DICTONARY
 (SDIC_ID INT8 NOT NULL
 ,SDIC_NAME VARCHAR(100) NOT NULL
 ,SDIC_TYPE FLOAT NOT NULL
 ,SDIC_CVALUE VARCHAR(240) NOT NULL
 ,SDIC_DT_CREATE TIMESTAMP NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SYS_DICTONARY.SDIC_NAME IS 'Наименование типа'
;

COMMENT ON COLUMN SYS_DICTONARY.SDIC_TYPE IS 'Идентификатор типа'
;

COMMENT ON COLUMN SYS_DICTONARY.SDIC_CVALUE IS 'Значение типа'
;

COMMENT ON COLUMN SYS_DICTONARY.SDIC_DT_CREATE IS 'Дата создания'
;

CREATE TABLE SPRV_OBJECTS
 (SPOB_ID INT8 NOT NULL
 ,SPOB_NAME VARCHAR(100) NOT NULL
 ,SPOB_DESC VARCHAR(2048) NOT NULL
 ,SPOB_DT_CREATE TIMESTAMP NOT NULL
 ,SPOB_DT_MODIFY TIMESTAMP NOT NULL
 ,SPOB_DT_CLOSE TIMESTAMP
 ,SPOB_SPCL_ID INT8 NOT NULL
 ,SPOB_SPOT_ID INT8 NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_OBJECTS.SPOB_NAME IS 'Наименование устройства'
;

COMMENT ON COLUMN SPRV_OBJECTS.SPOB_DESC IS 'Описание устройства'
;

COMMENT ON COLUMN SPRV_OBJECTS.SPOB_DT_CREATE IS 'Дата создания'
;

COMMENT ON COLUMN SPRV_OBJECTS.SPOB_DT_MODIFY IS 'Дата модификации'
;

COMMENT ON COLUMN SPRV_OBJECTS.SPOB_DT_CLOSE IS 'Дата закрытия'
;

CREATE TABLE SPRV_OBJECTS_ATTR
 (SPAT_ID INTEGER NOT NULL
 ,SPAT_ATTR INTEGER NOT NULL
 ,SPAT_ATTR_TYPE INTEGER NOT NULL
 ,SPAT_NUMB FLOAT
 ,SPAT_TEXT TEXT
 ,SPAT_DATE TIMESTAMP
 ,SPAT_SPOB_ID INT8 NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_OBJECTS_ATTR.SPAT_ATTR IS 'ИД атрибута'
;

COMMENT ON COLUMN SPRV_OBJECTS_ATTR.SPAT_ATTR_TYPE IS 'ИД типа атрибута 1 - FLOAT, 2 - TEXT, 3 - DATE'
;

COMMENT ON COLUMN SPRV_OBJECTS_ATTR.SPAT_NUMB IS 'Значение атрибута FLOAT'
;

COMMENT ON COLUMN SPRV_OBJECTS_ATTR.SPAT_TEXT IS 'Значение атрибута TEXT'
;

COMMENT ON COLUMN SPRV_OBJECTS_ATTR.SPAT_DATE IS 'Значение атрибута DATE'
;


CREATE TABLE DATA_SENSOR
 (DASN_ID INT8 NOT NULL
 ,DASN_UID INT8 NOT NULL
 ,DASN_DATETIME TIMESTAMP NOT NULL
 ,DASN_LATITUDE FLOAT NOT NULL
 ,DASN_LONGITUDE FLOAT NOT NULL
 ,DASN_STATUS INT8 NOT NULL
 ,DASN_SAT_USED INT8
 ,DASN_ZONE_ALARM INT8
 ,DASN_MACRO_ID INT8
 ,DASN_MACRO_SRC INT8
 ,DASN_SOG FLOAT
 ,DASN_COURSE FLOAT
 ,DASN_HDOP FLOAT
 ,DASN_HGEO FLOAT
 ,DASN_HMET FLOAT
 ,DASN_GPIO INT8
 ,DASN_ADC INT8
 ,DASN_TEMP FLOAT
 ,DASN_TYPE INT8 NOT NULL
 ,DASN_XML TEXT NOT NULL
 ,DASN_DTM TIMESTAMP NOT NULL
 ,DASN_SPSN_ID INT8 NOT NULL
 ,DASN_VEHICLE VARCHAR
 )
 WITHOUT OIDS 
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN DATA_SENSOR.DASN_UID IS 'Идентификатор записи лога'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_DATETIME IS 'Дата время с таймзоной'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_LATITUDE IS 'Географическая долгота'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_LONGITUDE IS 'Географическая широта'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_STATUS IS 'Флаг состояний'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_SAT_USED IS 'Количество спутников'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_ZONE_ALARM IS 'Состояние тревога зон охраны'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_MACRO_ID IS 'Номер макроса'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_MACRO_SRC IS 'Код источника'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_SOG IS 'Скорость в м;с'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_COURSE IS 'Курс в градусах'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_HDOP IS 'Значение HDOP'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_HGEO IS 'Значение HGEO'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_HMET IS 'Значение HMET'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_GPIO IS 'Состояние входов-выходов в позиционно-битовом коде'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_ADC IS 'Состояние аналоговых входов'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_TEMP IS 'Температура С'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_TYPE IS 'Тип данных'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_XML IS 'Дополнтельные данные.'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_DTM IS 'Дата модификации'
;

COMMENT ON COLUMN DATA_SENSOR.DASN_VEHICLE IS 'Реальный идентификатор устройства'
;


CREATE TABLE DATA_SENSOR_LAST
 (DASL_ID INT8 NOT NULL
 ,DASL_UID INT8 NOT NULL
 ,DASL_DATETIME TIMESTAMP NOT NULL
 ,DASL_LATITUDE FLOAT NOT NULL
 ,DASL_LONGITUDE FLOAT NOT NULL
 ,DASL_STATUS INT8 NOT NULL
 ,DASL_SAT_USED INT8
 ,DASL_ZONE_ALARM INT8
 ,DASL_MACRO_ID INT8
 ,DASL_MACRO_SRC INT8
 ,DASL_SOG FLOAT
 ,DASL_COURSE FLOAT
 ,DASL_HDOP FLOAT
 ,DASL_HGEO FLOAT
 ,DASL_HMET FLOAT
 ,DASL_GPIO INT8
 ,DASL_ADC INT8
 ,DASL_TEMP FLOAT
 ,DASL_TYPE INT8 NOT NULL
 ,DASL_XML TEXT NOT NULL
 ,DASL_DTM TIMESTAMP NOT NULL
 ,DASL_SPSN_ID INT8 NOT NULL
 ,DASL_VEHICLE VARCHAR
 ,DASL_DASN_ID INT8 NOT NULL
 )
 WITHOUT OIDS 
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_UID IS 'Идентификатор записи лога'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_DATETIME IS 'Дата время с таймзоной'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_LATITUDE IS 'Географическая долгота'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_LONGITUDE IS 'Географическая широта'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_STATUS IS 'Флаг состояний'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_SAT_USED IS 'Количество спутников'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_ZONE_ALARM IS 'Состояние тревога зон охраны'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_MACRO_ID IS 'Номер макроса'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_MACRO_SRC IS 'Код источника'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_SOG IS 'Скорость в м;с'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_COURSE IS 'Курс в градусах'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_HDOP IS 'Значение HDOP'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_HGEO IS 'Значение HGEO'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_HMET IS 'Значение HMET'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_GPIO IS 'Состояние входов-выходов в позиционно-битовом коде'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_ADC IS 'Состояние аналоговых входов'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_TEMP IS 'Температура С'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_TYPE IS 'Тип данных'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_XML IS 'Дополнтельные данные.'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_DTM IS 'Дата модификации'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_VEHICLE IS 'Реальный идентификатор устройства'
;

COMMENT ON COLUMN DATA_SENSOR_LAST.DASL_DASN_ID IS 'Ссылка на таблицу DATA_SENSOR'
;


CREATE TABLE SPRV_SENSOR_TYPES
 (SPST_ID INT8 NOT NULL
 ,SPST_NAME VARCHAR(30) NOT NULL
 ,SPST_DESC VARCHAR(1024) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_SENSOR_TYPES.SPST_NAME IS 'Нименование типа'
;

COMMENT ON COLUMN SPRV_SENSOR_TYPES.SPST_DESC IS 'Описание типа'
;

CREATE TABLE SPRV_DEPARTS
 (SPDP_ID INT8 NOT NULL
 ,SPDP_NAME VARCHAR(2048) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_DEPARTS.SPDP_NAME IS 'Наименование организации'
;

CREATE TABLE SPRV_SENSORS
 (SPSN_ID INT8 NOT NULL
 ,SPSN_UIN FLOAT NOT NULL
 ,SPSN_NAME VARCHAR(30) NOT NULL
 ,SPSN_DESC VARCHAR(1024)
 ,SPSN_SPST_ID INT8
 ,SPSN_SPMD_ID INT8 NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_SENSORS.SPSN_UIN IS 'Идентификатор датчика'
;

COMMENT ON COLUMN SPRV_SENSORS.SPSN_NAME IS 'Наименование датчика'
;

COMMENT ON COLUMN SPRV_SENSORS.SPSN_DESC IS 'Описание датчика'
;

CREATE TABLE SYS_CONSTS
 (SC_ID INT8 NOT NULL
 ,SC_NAME VARCHAR(240) NOT NULL
 ,SC_NVALUE FLOAT
 ,SC_CVALUE VARCHAR(100)
 ,SC_DVALUE TIMESTAMP
 ,SC_DT_CREATE TIMESTAMP NOT NULL
 ,SC_DESC VARCHAR(1024) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SYS_CONSTS.SC_NAME IS 'Наименование переменной'
;

COMMENT ON COLUMN SYS_CONSTS.SC_NVALUE IS 'Значение типа номер'
;

COMMENT ON COLUMN SYS_CONSTS.SC_CVALUE IS 'Значение типа строка'
;

COMMENT ON COLUMN SYS_CONSTS.SC_DVALUE IS 'Значение типа дата'
;

COMMENT ON COLUMN SYS_CONSTS.SC_DT_CREATE IS 'Дата создания'
;

COMMENT ON COLUMN SYS_CONSTS.SC_DESC IS 'Описание переменной'
;

CREATE TABLE SPRV_MODULE_TYPES
 (SPMT_ID INT8 NOT NULL
 ,SPMT_NAME VARCHAR(100) NOT NULL
 ,SPMT_DESC VARCHAR(2048) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_MODULE_TYPES.SPMT_NAME IS 'Наименование типа'
;

COMMENT ON COLUMN SPRV_MODULE_TYPES.SPMT_DESC IS 'Описание типа'
;

CREATE TABLE SPRV_MODULES
 (SPMD_ID INT8 NOT NULL
 ,SPMD_UID FLOAT NOT NULL
 ,SPMD_NAME VARCHAR(100) NOT NULL
 ,SPMD_DT_CREATE TIMESTAMP NOT NULL
 ,SPMD_DT_CLOSE TIMESTAMP
 ,SPMD_USER VARCHAR(30)
 ,SPMD_IMEI VARCHAR(30) NOT NULL
 ,SPMD_NUMB VARCHAR(15) NOT NULL
 ,SPMD_DESC VARCHAR(1024) NOT NULL
 ,SPMD_SPOB_ID INT8 NOT NULL
 ,SPMD_SPMT_ID INT8 NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_UID IS 'Уникальный идентификатор'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_NAME IS 'Наименование блока'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_DT_CREATE IS 'Дата регистрации блока'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_DT_CLOSE IS 'Дата закрытия блока'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_USER IS 'Пользователь создавший блок'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_IMEI IS 'IMEI'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_NUMB IS 'Номер телефона'
;

COMMENT ON COLUMN SPRV_MODULES.SPMD_DESC IS 'Описание блока'
;

CREATE TABLE SYS_VARIABLES
 (SVAR_ID INT8 NOT NULL
 ,SVAR_NAME VARCHAR(100) NOT NULL
 ,SVAR_NVALUE FLOAT
 ,SVAR_CVALUE VARCHAR(240)
 ,SVAR_DVALUE TIMESTAMP
 ,SVAR_DT_CREATE TIMESTAMP NOT NULL
 ,SVAR_DT_MODIFY TIMESTAMP NOT NULL
 ,SVAR_DESC VARCHAR(240) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_NAME IS 'Имя переменной'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_NVALUE IS 'Значение типа число'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_CVALUE IS 'Значение типа строка'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_DVALUE IS 'Значение типа дата'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_DT_CREATE IS 'Дата создания'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_DT_MODIFY IS 'Дата модификации'
;

COMMENT ON COLUMN SYS_VARIABLES.SVAR_DESC IS 'Описание'
;

CREATE TABLE ACCOUNTS
 (ACCT_ID INT8 NOT NULL
 ,ACCT_LOGIN VARCHAR(30) NOT NULL
 ,ACCT_PASSWD VARCHAR(1024) NOT NULL
 ,ACCT_NAME VARCHAR(1024) NOT NULL
 ,ACCT_NAME2 VARCHAR(1024)
 ,ACCT_NAME3 VARCHAR(1024)
 ,ACCT_DT TIMESTAMP NOT NULL
 ,ACCT_EMAIL VARCHAR(300)
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN ACCOUNTS.ACCT_LOGIN IS 'Логин'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_PASSWD IS 'Пароль'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_NAME IS 'Имя'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_NAME2 IS 'Имя'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_NAME3 IS 'Отчество'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_DT IS 'Дата создания'
;

COMMENT ON COLUMN ACCOUNTS.ACCT_EMAIL IS 'Е-майл'
;

CREATE TABLE ACCOUNT_LISTS
 (ACCL_ID INT8 NOT NULL
 ,ACCL_REF_ID1 INT8 NOT NULL
 ,ACCL_REF_TYPE1 INT8 NOT NULL
 ,ACCL_REF_ID2 INT8 NOT NULL
 ,ACCL_REF_TYPE2 INT8 NOT NULL
 ,ACCL_ACL INT8 NOT NULL
 ,ACCL_DT TIMESTAMP NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_REF_ID1 IS 'ИД объекта 1 которому предоставляются права'
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_REF_TYPE1 IS 'Тип объекта 1'
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_REF_ID2 IS 'ИД объекта 2 на который предоставляются права'
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_REF_TYPE2 IS 'Тип объекта 2'
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_ACL IS 'Тип доступа'
;

COMMENT ON COLUMN ACCOUNT_LISTS.ACCL_DT IS 'Дата создание ACL'
;


-- Create Gis Structures


CREATE TABLE GIS_OBJECTS
 (GSOB_ID INTEGER NOT NULL
 ,GSOB_NAME VARCHAR(30) NOT NULL
 ,GSOB_DESC VARCHAR(2048) NOT NULL
 ,GSOB_DT DATE NOT NULL
 ,GSOB_DT_CLOSE DATE
 ,GSOB_CODE VARCHAR(100)
 ,GSOB_GSTP_ID INTEGER
 ,GSOB_GSER_ID INTEGER
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN GIS_OBJECTS.GSOB_NAME IS 'Код объекта'
;

COMMENT ON COLUMN GIS_OBJECTS.GSOB_DESC IS 'Описания объекта'
;

COMMENT ON COLUMN GIS_OBJECTS.GSOB_DT IS 'Дата создания объекта'
;

COMMENT ON COLUMN GIS_OBJECTS.GSOB_DT_CLOSE IS 'Дата закрытия объекта'
;

COMMENT ON COLUMN GIS_OBJECTS.GSOB_CODE IS 'Ид объекта в системе откуда пришла информация'
;

CREATE TABLE GIS_OBJECTS_ATTR
 (GSAT_ID INTEGER NOT NULL
 ,GSAT_ATTR INTEGER
 ,GSAT_ATTR1 FLOAT
 ,GSAT_ATTR2 FLOAT
 ,GSAT_GSOB_ID INTEGER
 ,GSAT_GSTT_ID INTEGER
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN GIS_OBJECTS_ATTR.GSAT_ATTR1 IS 'Начало интервального атрибута'
;

COMMENT ON COLUMN GIS_OBJECTS_ATTR.GSAT_ATTR2 IS 'Конец интервального атрибута'
;

COMMENT ON COLUMN GIS_OBJECTS_ATTR.GSAT_ATTR IS 'Атрибут типа INTEGER'
;

CREATE TABLE GIS_TYPES
 (GSTP_ID INTEGER NOT NULL
 ,GSTP_CODE VARCHAR(30) NOT NULL
 ,GSTP_NAME VARCHAR(100) NOT NULL
 ,GSTP_DESC VARCHAR(1024)
 ,GSTP_DT DATE NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN GIS_TYPES.GSTP_CODE IS 'Кодировка'
;

COMMENT ON COLUMN GIS_TYPES.GSTP_NAME IS 'Краткое наименование'
;

COMMENT ON COLUMN GIS_TYPES.GSTP_DESC IS 'Описание'
;

COMMENT ON COLUMN GIS_TYPES.GSTP_DT IS 'Дата создания'
;

CREATE TABLE GIS_POINT_TYPES
 (GSPT_ID INTEGER NOT NULL
 ,GSPT_NAME VARCHAR(100) NOT NULL
 ,GSPT_DESC VARCHAR(1024)
 ,GSPT_DT DATE NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_NAME IS 'Наименование точки'
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_DESC IS 'Описание точки'
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_DT IS 'Дата создания'
;

CREATE TABLE GIS_DATA
 (GSDT_ID INTEGER NOT NULL
 ,GSDT_DT DATE NOT NULL
 ,GSDT_GSOB_ID INTEGER NOT NULL
 ,GSDT_PIKET NUMERIC(12,3) NOT NULL
 ,GSDT_GSPT_ID INT4 NOT NULL
 ,GSDT_INFO VARCHAR(100)
 )
 WITH OIDS
 TABLESPACE USER_DATA
;
-- Добавление ГЕО столбца типа линия - 4326 - WGS 84 longitude/latitude размерности
SELECT AddGeometryColumn('owner_track', 'gis_data', 'gsdt_line_geom', 4326, 'LINESTRING', 2)
;

-- Добавление ГЕО столбца типа точка - 4326 - WGS 84 longitude/latitude размерности
SELECT AddGeometryColumn('owner_track', 'gis_data', 'gsdt_point_geom', 4326, 'POINT', 3)
;

-- Добавление ГЕО столбца типа замкнутая линия - 4326 - WGS 84 longitude/latitude размерности
SELECT AddGeometryColumn('owner_track', 'gis_data', 'gsdt_multiline_geom', 4326, 'MULTILINESTRING', 2)
;

COMMENT ON COLUMN GIS_DATA.GSDT_DT IS 'Дата создания'
;
COMMENT ON COLUMN GIS_DATA.GSDT_PIKET IS 'Пикетажное положение точки на дороге'
;
COMMENT ON COLUMN GIS_DATA.GSDT_GSPT_ID IS 'признак "замечательной" точки (начало дороги, ИССО, перекрестки, примыкания и т.д.) 0 - обычная точка, другие значения - "замечательная" точка'
;
COMMENT ON COLUMN GIS_DATA.GSDT_INFO IS 'Дополнительная информация'
;

CREATE TABLE GIS_POINT_TYPES
 (GSPT_ID INTEGER NOT NULL
 ,GSPT_NAME VARCHAR(100) NOT NULL
 ,GSPT_DESC VARCHAR(1024)
 ,GSPT_DT DATE NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_NAME IS 'Наименование точки'
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_DESC IS 'Описание точки'
;
COMMENT ON COLUMN GIS_POINT_TYPES.GSPT_DT IS 'Дата создания'
;

CREATE TABLE GIS_ERRORS
 (GSER_ID INTEGER NOT NULL
 ,GSER_DESC VARCHAR(1024)
 ,GSER_DT DATE NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;
COMMENT ON COLUMN GIS_ERRORS.GSER_ID IS 'Код ошибки'
;
COMMENT ON COLUMN GIS_ERRORS.GSER_DESC IS 'Описание ошибки'
;
COMMENT ON COLUMN GIS_ERRORS.GSER_DT IS 'Дата создания'
;

CREATE TABLE SPRV_CIS_INFO
 (SPCI_ID INTEGER NOT NULL
 ,SPCI_CODE INTEGER NOT NULL
 ,SPCI_DESC VARCHAR(240)
 ,SPCI_GSTP_ID INTEGER NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_CIS_INFO.SPCI_CODE IS 'Код типа'
;

COMMENT ON COLUMN SPRV_CIS_INFO.SPCI_DESC IS 'Описание'
;

CREATE TABLE GIS_ATTR_TYPES
 (GSTT_ID INTEGER NOT NULL
 ,GSTT_NAME VARCHAR(30) NOT NULL
 ,GSTT_DESC VARCHAR(1024) NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN GIS_ATTR_TYPES.GSTT_NAME IS 'Имя типа'
;

COMMENT ON COLUMN GIS_ATTR_TYPES.GSTT_DESC IS 'Описание'
;


CREATE TABLE SPRV_CALIBRATE
 (SPCB_SPSN_ID INT8 NOT NULL
 ,SPCB_SPUN_ID INTEGER NOT NULL
 ,SPCB_DATA TEXT NOT NULL
 ,SPCB_TYPE INTEGER NOT NULL
 ,SPCB_DT_CREATE DATE NOT NULL
 ,SPCB_DT_MODIFY DATE NOT NULL
 ,SPCB_DT_CLOSE DATE
 ,SPCB_ID INTEGER NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN SPRV_CALIBRATE.SPCB_DATA IS 'Данные калибровки'
;

COMMENT ON COLUMN SPRV_CALIBRATE.SPCB_TYPE IS 'Тип датчика'
;

COMMENT ON COLUMN SPRV_CALIBRATE.SPCB_DT_CREATE IS 'Дата создания записи'
;

COMMENT ON COLUMN SPRV_CALIBRATE.SPCB_DT_MODIFY IS 'Дата модификации'
;

COMMENT ON COLUMN SPRV_CALIBRATE.SPCB_DT_CLOSE IS 'Дата окончания действия'
;

CREATE TABLE SPRV_UNITS
 (SPUN_SPUS_ID INTEGER NOT NULL
 ,SPUN_NAME VARCHAR(30) NOT NULL
 ,SPUN_ABBR_EN VARCHAR(30) NOT NULL
 ,SPUN_ABBR_RU VARCHAR(30) NOT NULL
 ,SPUN_ID INTEGER NOT NULL
 )
 WITH OIDS
 TABLESPACE USER_DATA
;


COMMENT ON COLUMN SPRV_UNITS.SPUN_SPUS_ID IS 'Код системы измерений'
;

COMMENT ON COLUMN SPRV_UNITS.SPUN_NAME IS 'Наименование единицы измерения'
;

COMMENT ON COLUMN SPRV_UNITS.SPUN_ABBR_EN IS 'Сокращение EN'
;

COMMENT ON COLUMN SPRV_UNITS.SPUN_ABBR_RU IS 'Сокращение RU'
;











-- Create Partititon on Data_Sensor
CREATE TABLE data_sensor_p00 
(CHECK ( dasn_datetime >= DATE '2009-02-01' AND dasn_datetime < DATE '2009-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i00 ON data_sensor_p00 (dasn_datetime);
CREATE RULE data_sensor_r00 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-02-01' AND dasn_datetime < DATE '2009-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p00 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p01 
(CHECK ( dasn_datetime >= DATE '2009-03-01' AND dasn_datetime < DATE '2009-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i01 ON data_sensor_p01 (dasn_datetime);
CREATE RULE data_sensor_r01 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-03-01' AND dasn_datetime < DATE '2009-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p01 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p02 
(CHECK ( dasn_datetime >= DATE '2009-04-01' AND dasn_datetime < DATE '2009-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i02 ON data_sensor_p02 (dasn_datetime);
CREATE RULE data_sensor_r02 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-04-01' AND dasn_datetime < DATE '2009-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p02 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p03 
(CHECK ( dasn_datetime >= DATE '2009-05-01' AND dasn_datetime < DATE '2009-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i03 ON data_sensor_p03 (dasn_datetime);
CREATE RULE data_sensor_r03 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-05-01' AND dasn_datetime < DATE '2009-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p03 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p04 
(CHECK ( dasn_datetime >= DATE '2009-06-01' AND dasn_datetime < DATE '2009-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i04 ON data_sensor_p04 (dasn_datetime);
CREATE RULE data_sensor_r04 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-06-01' AND dasn_datetime < DATE '2009-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p04 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p05 
(CHECK ( dasn_datetime >= DATE '2009-07-01' AND dasn_datetime < DATE '2009-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i05 ON data_sensor_p05 (dasn_datetime);
CREATE RULE data_sensor_r05 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-07-01' AND dasn_datetime < DATE '2009-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p05 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p06 
(CHECK ( dasn_datetime >= DATE '2009-08-01' AND dasn_datetime < DATE '2009-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i06 ON data_sensor_p06 (dasn_datetime);
CREATE RULE data_sensor_r06 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-08-01' AND dasn_datetime < DATE '2009-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p06 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p07 
(CHECK ( dasn_datetime >= DATE '2009-09-01' AND dasn_datetime < DATE '2009-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i07 ON data_sensor_p07 (dasn_datetime);
CREATE RULE data_sensor_r07 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-09-01' AND dasn_datetime < DATE '2009-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p07 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p08 
(CHECK ( dasn_datetime >= DATE '2009-10-01' AND dasn_datetime < DATE '2009-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i08 ON data_sensor_p08 (dasn_datetime);
CREATE RULE data_sensor_r08 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-10-01' AND dasn_datetime < DATE '2009-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p08 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p09 
(CHECK ( dasn_datetime >= DATE '2009-11-01' AND dasn_datetime < DATE '2009-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i09 ON data_sensor_p09 (dasn_datetime);
CREATE RULE data_sensor_r09 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-11-01' AND dasn_datetime < DATE '2009-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p09 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p10 
(CHECK ( dasn_datetime >= DATE '2009-12-01' AND dasn_datetime < DATE '2010-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i10 ON data_sensor_p10 (dasn_datetime);
CREATE RULE data_sensor_r10 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2009-12-01' AND dasn_datetime < DATE '2010-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p10 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p11 
(CHECK ( dasn_datetime >= DATE '2010-01-01' AND dasn_datetime < DATE '2010-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i11 ON data_sensor_p11 (dasn_datetime);
CREATE RULE data_sensor_r11 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-01-01' AND dasn_datetime < DATE '2010-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p11 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p12 
(CHECK ( dasn_datetime >= DATE '2010-02-01' AND dasn_datetime < DATE '2010-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i12 ON data_sensor_p12 (dasn_datetime);
CREATE RULE data_sensor_r12 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-02-01' AND dasn_datetime < DATE '2010-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p12 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p13 
(CHECK ( dasn_datetime >= DATE '2010-03-01' AND dasn_datetime < DATE '2010-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i13 ON data_sensor_p13 (dasn_datetime);
CREATE RULE data_sensor_r13 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-03-01' AND dasn_datetime < DATE '2010-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p13 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p14 
(CHECK ( dasn_datetime >= DATE '2010-04-01' AND dasn_datetime < DATE '2010-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i14 ON data_sensor_p14 (dasn_datetime);
CREATE RULE data_sensor_r14 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-04-01' AND dasn_datetime < DATE '2010-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p14 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p15 
(CHECK ( dasn_datetime >= DATE '2010-05-01' AND dasn_datetime < DATE '2010-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i15 ON data_sensor_p15 (dasn_datetime);
CREATE RULE data_sensor_r15 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-05-01' AND dasn_datetime < DATE '2010-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p15 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p16 
(CHECK ( dasn_datetime >= DATE '2010-06-01' AND dasn_datetime < DATE '2010-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i16 ON data_sensor_p16 (dasn_datetime);
CREATE RULE data_sensor_r16 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-06-01' AND dasn_datetime < DATE '2010-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p16 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p17 
(CHECK ( dasn_datetime >= DATE '2010-07-01' AND dasn_datetime < DATE '2010-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i17 ON data_sensor_p17 (dasn_datetime);
CREATE RULE data_sensor_r17 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-07-01' AND dasn_datetime < DATE '2010-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p17 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p18 
(CHECK ( dasn_datetime >= DATE '2010-08-01' AND dasn_datetime < DATE '2010-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i18 ON data_sensor_p18 (dasn_datetime);
CREATE RULE data_sensor_r18 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-08-01' AND dasn_datetime < DATE '2010-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p18 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p19 
(CHECK ( dasn_datetime >= DATE '2010-09-01' AND dasn_datetime < DATE '2010-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i19 ON data_sensor_p19 (dasn_datetime);
CREATE RULE data_sensor_r19 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-09-01' AND dasn_datetime < DATE '2010-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p19 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p20 
(CHECK ( dasn_datetime >= DATE '2010-10-01' AND dasn_datetime < DATE '2010-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i20 ON data_sensor_p20 (dasn_datetime);
CREATE RULE data_sensor_r20 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-10-01' AND dasn_datetime < DATE '2010-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p20 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p21 
(CHECK ( dasn_datetime >= DATE '2010-11-01' AND dasn_datetime < DATE '2010-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i21 ON data_sensor_p21 (dasn_datetime);
CREATE RULE data_sensor_r21 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-11-01' AND dasn_datetime < DATE '2010-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p21 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p22 
(CHECK ( dasn_datetime >= DATE '2010-12-01' AND dasn_datetime < DATE '2011-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i22 ON data_sensor_p22 (dasn_datetime);
CREATE RULE data_sensor_r22 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2010-12-01' AND dasn_datetime < DATE '2011-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p22 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p23 
(CHECK ( dasn_datetime >= DATE '2011-01-01' AND dasn_datetime < DATE '2011-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i23 ON data_sensor_p23 (dasn_datetime);
CREATE RULE data_sensor_r23 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-01-01' AND dasn_datetime < DATE '2011-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p23 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p24 
(CHECK ( dasn_datetime >= DATE '2011-02-01' AND dasn_datetime < DATE '2011-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i24 ON data_sensor_p24 (dasn_datetime);
CREATE RULE data_sensor_r24 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-02-01' AND dasn_datetime < DATE '2011-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p24 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p25 
(CHECK ( dasn_datetime >= DATE '2011-03-01' AND dasn_datetime < DATE '2011-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i25 ON data_sensor_p25 (dasn_datetime);
CREATE RULE data_sensor_r25 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-03-01' AND dasn_datetime < DATE '2011-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p25 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p26 
(CHECK ( dasn_datetime >= DATE '2011-04-01' AND dasn_datetime < DATE '2011-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i26 ON data_sensor_p26 (dasn_datetime);
CREATE RULE data_sensor_r26 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-04-01' AND dasn_datetime < DATE '2011-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p26 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p27 
(CHECK ( dasn_datetime >= DATE '2011-05-01' AND dasn_datetime < DATE '2011-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i27 ON data_sensor_p27 (dasn_datetime);
CREATE RULE data_sensor_r27 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-05-01' AND dasn_datetime < DATE '2011-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p27 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p28 
(CHECK ( dasn_datetime >= DATE '2011-06-01' AND dasn_datetime < DATE '2011-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i28 ON data_sensor_p28 (dasn_datetime);
CREATE RULE data_sensor_r28 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-06-01' AND dasn_datetime < DATE '2011-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p28 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p29 
(CHECK ( dasn_datetime >= DATE '2011-07-01' AND dasn_datetime < DATE '2011-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i29 ON data_sensor_p29 (dasn_datetime);
CREATE RULE data_sensor_r29 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-07-01' AND dasn_datetime < DATE '2011-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p29 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p30 
(CHECK ( dasn_datetime >= DATE '2011-08-01' AND dasn_datetime < DATE '2011-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i30 ON data_sensor_p30 (dasn_datetime);
CREATE RULE data_sensor_r30 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-08-01' AND dasn_datetime < DATE '2011-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p30 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p31 
(CHECK ( dasn_datetime >= DATE '2011-09-01' AND dasn_datetime < DATE '2011-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i31 ON data_sensor_p31 (dasn_datetime);
CREATE RULE data_sensor_r31 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-09-01' AND dasn_datetime < DATE '2011-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p31 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p32 
(CHECK ( dasn_datetime >= DATE '2011-10-01' AND dasn_datetime < DATE '2011-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i32 ON data_sensor_p32 (dasn_datetime);
CREATE RULE data_sensor_r32 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-10-01' AND dasn_datetime < DATE '2011-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p32 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p33 
(CHECK ( dasn_datetime >= DATE '2011-11-01' AND dasn_datetime < DATE '2011-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i33 ON data_sensor_p33 (dasn_datetime);
CREATE RULE data_sensor_r33 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-11-01' AND dasn_datetime < DATE '2011-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p33 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p34 
(CHECK ( dasn_datetime >= DATE '2011-12-01' AND dasn_datetime < DATE '2012-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i34 ON data_sensor_p34 (dasn_datetime);
CREATE RULE data_sensor_r34 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2011-12-01' AND dasn_datetime < DATE '2012-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p34 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p35 
(CHECK ( dasn_datetime >= DATE '2012-01-01' AND dasn_datetime < DATE '2012-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i35 ON data_sensor_p35 (dasn_datetime);
CREATE RULE data_sensor_r35 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-01-01' AND dasn_datetime < DATE '2012-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p35 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p36 
(CHECK ( dasn_datetime >= DATE '2012-02-01' AND dasn_datetime < DATE '2012-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i36 ON data_sensor_p36 (dasn_datetime);
CREATE RULE data_sensor_r36 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-02-01' AND dasn_datetime < DATE '2012-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p36 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p37 
(CHECK ( dasn_datetime >= DATE '2012-03-01' AND dasn_datetime < DATE '2012-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i37 ON data_sensor_p37 (dasn_datetime);
CREATE RULE data_sensor_r37 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-03-01' AND dasn_datetime < DATE '2012-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p37 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p38 
(CHECK ( dasn_datetime >= DATE '2012-04-01' AND dasn_datetime < DATE '2012-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i38 ON data_sensor_p38 (dasn_datetime);
CREATE RULE data_sensor_r38 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-04-01' AND dasn_datetime < DATE '2012-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p38 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p39 
(CHECK ( dasn_datetime >= DATE '2012-05-01' AND dasn_datetime < DATE '2012-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i39 ON data_sensor_p39 (dasn_datetime);
CREATE RULE data_sensor_r39 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-05-01' AND dasn_datetime < DATE '2012-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p39 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p40 
(CHECK ( dasn_datetime >= DATE '2012-06-01' AND dasn_datetime < DATE '2012-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i40 ON data_sensor_p40 (dasn_datetime);
CREATE RULE data_sensor_r40 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-06-01' AND dasn_datetime < DATE '2012-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p40 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p41 
(CHECK ( dasn_datetime >= DATE '2012-07-01' AND dasn_datetime < DATE '2012-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i41 ON data_sensor_p41 (dasn_datetime);
CREATE RULE data_sensor_r41 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-07-01' AND dasn_datetime < DATE '2012-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p41 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p42 
(CHECK ( dasn_datetime >= DATE '2012-08-01' AND dasn_datetime < DATE '2012-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i42 ON data_sensor_p42 (dasn_datetime);
CREATE RULE data_sensor_r42 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-08-01' AND dasn_datetime < DATE '2012-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p42 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p43 
(CHECK ( dasn_datetime >= DATE '2012-09-01' AND dasn_datetime < DATE '2012-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i43 ON data_sensor_p43 (dasn_datetime);
CREATE RULE data_sensor_r43 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-09-01' AND dasn_datetime < DATE '2012-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p43 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p44 
(CHECK ( dasn_datetime >= DATE '2012-10-01' AND dasn_datetime < DATE '2012-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i44 ON data_sensor_p44 (dasn_datetime);
CREATE RULE data_sensor_r44 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-10-01' AND dasn_datetime < DATE '2012-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p44 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p45 
(CHECK ( dasn_datetime >= DATE '2012-11-01' AND dasn_datetime < DATE '2012-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i45 ON data_sensor_p45 (dasn_datetime);
CREATE RULE data_sensor_r45 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-11-01' AND dasn_datetime < DATE '2012-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p45 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p46 
(CHECK ( dasn_datetime >= DATE '2012-12-01' AND dasn_datetime < DATE '2013-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i46 ON data_sensor_p46 (dasn_datetime);
CREATE RULE data_sensor_r46 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2012-12-01' AND dasn_datetime < DATE '2013-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p46 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p47 
(CHECK ( dasn_datetime >= DATE '2013-01-01' AND dasn_datetime < DATE '2013-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i47 ON data_sensor_p47 (dasn_datetime);
CREATE RULE data_sensor_r47 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-01-01' AND dasn_datetime < DATE '2013-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p47 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p48 
(CHECK ( dasn_datetime >= DATE '2013-02-01' AND dasn_datetime < DATE '2013-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i48 ON data_sensor_p48 (dasn_datetime);
CREATE RULE data_sensor_r48 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-02-01' AND dasn_datetime < DATE '2013-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p48 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p49 
(CHECK ( dasn_datetime >= DATE '2013-03-01' AND dasn_datetime < DATE '2013-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i49 ON data_sensor_p49 (dasn_datetime);
CREATE RULE data_sensor_r49 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-03-01' AND dasn_datetime < DATE '2013-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p49 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p50 
(CHECK ( dasn_datetime >= DATE '2013-04-01' AND dasn_datetime < DATE '2013-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i50 ON data_sensor_p50 (dasn_datetime);
CREATE RULE data_sensor_r50 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-04-01' AND dasn_datetime < DATE '2013-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p50 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p51 
(CHECK ( dasn_datetime >= DATE '2013-05-01' AND dasn_datetime < DATE '2013-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i51 ON data_sensor_p51 (dasn_datetime);
CREATE RULE data_sensor_r51 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-05-01' AND dasn_datetime < DATE '2013-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p51 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p52 
(CHECK ( dasn_datetime >= DATE '2013-06-01' AND dasn_datetime < DATE '2013-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i52 ON data_sensor_p52 (dasn_datetime);
CREATE RULE data_sensor_r52 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-06-01' AND dasn_datetime < DATE '2013-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p52 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p53 
(CHECK ( dasn_datetime >= DATE '2013-07-01' AND dasn_datetime < DATE '2013-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i53 ON data_sensor_p53 (dasn_datetime);
CREATE RULE data_sensor_r53 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-07-01' AND dasn_datetime < DATE '2013-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p53 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p54 
(CHECK ( dasn_datetime >= DATE '2013-08-01' AND dasn_datetime < DATE '2013-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i54 ON data_sensor_p54 (dasn_datetime);
CREATE RULE data_sensor_r54 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-08-01' AND dasn_datetime < DATE '2013-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p54 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p55 
(CHECK ( dasn_datetime >= DATE '2013-09-01' AND dasn_datetime < DATE '2013-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i55 ON data_sensor_p55 (dasn_datetime);
CREATE RULE data_sensor_r55 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-09-01' AND dasn_datetime < DATE '2013-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p55 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p56 
(CHECK ( dasn_datetime >= DATE '2013-10-01' AND dasn_datetime < DATE '2013-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i56 ON data_sensor_p56 (dasn_datetime);
CREATE RULE data_sensor_r56 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-10-01' AND dasn_datetime < DATE '2013-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p56 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p57 
(CHECK ( dasn_datetime >= DATE '2013-11-01' AND dasn_datetime < DATE '2013-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i57 ON data_sensor_p57 (dasn_datetime);
CREATE RULE data_sensor_r57 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-11-01' AND dasn_datetime < DATE '2013-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p57 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p58 
(CHECK ( dasn_datetime >= DATE '2013-12-01' AND dasn_datetime < DATE '2014-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i58 ON data_sensor_p58 (dasn_datetime);
CREATE RULE data_sensor_r58 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2013-12-01' AND dasn_datetime < DATE '2014-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p58 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p59 
(CHECK ( dasn_datetime >= DATE '2014-01-01' AND dasn_datetime < DATE '2014-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i59 ON data_sensor_p59 (dasn_datetime);
CREATE RULE data_sensor_r59 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-01-01' AND dasn_datetime < DATE '2014-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p59 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p60 
(CHECK ( dasn_datetime >= DATE '2014-02-01' AND dasn_datetime < DATE '2014-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i60 ON data_sensor_p60 (dasn_datetime);
CREATE RULE data_sensor_r60 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-02-01' AND dasn_datetime < DATE '2014-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p60 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p61 
(CHECK ( dasn_datetime >= DATE '2014-03-01' AND dasn_datetime < DATE '2014-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i61 ON data_sensor_p61 (dasn_datetime);
CREATE RULE data_sensor_r61 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-03-01' AND dasn_datetime < DATE '2014-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p61 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p62 
(CHECK ( dasn_datetime >= DATE '2014-04-01' AND dasn_datetime < DATE '2014-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i62 ON data_sensor_p62 (dasn_datetime);
CREATE RULE data_sensor_r62 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-04-01' AND dasn_datetime < DATE '2014-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p62 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p63 
(CHECK ( dasn_datetime >= DATE '2014-05-01' AND dasn_datetime < DATE '2014-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i63 ON data_sensor_p63 (dasn_datetime);
CREATE RULE data_sensor_r63 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-05-01' AND dasn_datetime < DATE '2014-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p63 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p64 
(CHECK ( dasn_datetime >= DATE '2014-06-01' AND dasn_datetime < DATE '2014-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i64 ON data_sensor_p64 (dasn_datetime);
CREATE RULE data_sensor_r64 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-06-01' AND dasn_datetime < DATE '2014-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p64 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p65 
(CHECK ( dasn_datetime >= DATE '2014-07-01' AND dasn_datetime < DATE '2014-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i65 ON data_sensor_p65 (dasn_datetime);
CREATE RULE data_sensor_r65 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-07-01' AND dasn_datetime < DATE '2014-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p65 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p66 
(CHECK ( dasn_datetime >= DATE '2014-08-01' AND dasn_datetime < DATE '2014-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i66 ON data_sensor_p66 (dasn_datetime);
CREATE RULE data_sensor_r66 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-08-01' AND dasn_datetime < DATE '2014-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p66 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p67 
(CHECK ( dasn_datetime >= DATE '2014-09-01' AND dasn_datetime < DATE '2014-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i67 ON data_sensor_p67 (dasn_datetime);
CREATE RULE data_sensor_r67 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-09-01' AND dasn_datetime < DATE '2014-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p67 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p68 
(CHECK ( dasn_datetime >= DATE '2014-10-01' AND dasn_datetime < DATE '2014-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i68 ON data_sensor_p68 (dasn_datetime);
CREATE RULE data_sensor_r68 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-10-01' AND dasn_datetime < DATE '2014-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p68 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p69 
(CHECK ( dasn_datetime >= DATE '2014-11-01' AND dasn_datetime < DATE '2014-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i69 ON data_sensor_p69 (dasn_datetime);
CREATE RULE data_sensor_r69 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-11-01' AND dasn_datetime < DATE '2014-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p69 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p70 
(CHECK ( dasn_datetime >= DATE '2014-12-01' AND dasn_datetime < DATE '2015-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i70 ON data_sensor_p70 (dasn_datetime);
CREATE RULE data_sensor_r70 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2014-12-01' AND dasn_datetime < DATE '2015-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p70 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p71 
(CHECK ( dasn_datetime >= DATE '2015-01-01' AND dasn_datetime < DATE '2015-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i71 ON data_sensor_p71 (dasn_datetime);
CREATE RULE data_sensor_r71 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-01-01' AND dasn_datetime < DATE '2015-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p71 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p72 
(CHECK ( dasn_datetime >= DATE '2015-02-01' AND dasn_datetime < DATE '2015-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i72 ON data_sensor_p72 (dasn_datetime);
CREATE RULE data_sensor_r72 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-02-01' AND dasn_datetime < DATE '2015-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p72 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p73 
(CHECK ( dasn_datetime >= DATE '2015-03-01' AND dasn_datetime < DATE '2015-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i73 ON data_sensor_p73 (dasn_datetime);
CREATE RULE data_sensor_r73 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-03-01' AND dasn_datetime < DATE '2015-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p73 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p74 
(CHECK ( dasn_datetime >= DATE '2015-04-01' AND dasn_datetime < DATE '2015-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i74 ON data_sensor_p74 (dasn_datetime);
CREATE RULE data_sensor_r74 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-04-01' AND dasn_datetime < DATE '2015-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p74 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p75 
(CHECK ( dasn_datetime >= DATE '2015-05-01' AND dasn_datetime < DATE '2015-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i75 ON data_sensor_p75 (dasn_datetime);
CREATE RULE data_sensor_r75 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-05-01' AND dasn_datetime < DATE '2015-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p75 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p76 
(CHECK ( dasn_datetime >= DATE '2015-06-01' AND dasn_datetime < DATE '2015-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i76 ON data_sensor_p76 (dasn_datetime);
CREATE RULE data_sensor_r76 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-06-01' AND dasn_datetime < DATE '2015-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p76 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p77 
(CHECK ( dasn_datetime >= DATE '2015-07-01' AND dasn_datetime < DATE '2015-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i77 ON data_sensor_p77 (dasn_datetime);
CREATE RULE data_sensor_r77 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-07-01' AND dasn_datetime < DATE '2015-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p77 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p78 
(CHECK ( dasn_datetime >= DATE '2015-08-01' AND dasn_datetime < DATE '2015-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i78 ON data_sensor_p78 (dasn_datetime);
CREATE RULE data_sensor_r78 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-08-01' AND dasn_datetime < DATE '2015-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p78 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p79 
(CHECK ( dasn_datetime >= DATE '2015-09-01' AND dasn_datetime < DATE '2015-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i79 ON data_sensor_p79 (dasn_datetime);
CREATE RULE data_sensor_r79 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-09-01' AND dasn_datetime < DATE '2015-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p79 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p80 
(CHECK ( dasn_datetime >= DATE '2015-10-01' AND dasn_datetime < DATE '2015-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i80 ON data_sensor_p80 (dasn_datetime);
CREATE RULE data_sensor_r80 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-10-01' AND dasn_datetime < DATE '2015-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p80 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p81 
(CHECK ( dasn_datetime >= DATE '2015-11-01' AND dasn_datetime < DATE '2015-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i81 ON data_sensor_p81 (dasn_datetime);
CREATE RULE data_sensor_r81 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-11-01' AND dasn_datetime < DATE '2015-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p81 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p82 
(CHECK ( dasn_datetime >= DATE '2015-12-01' AND dasn_datetime < DATE '2016-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i82 ON data_sensor_p82 (dasn_datetime);
CREATE RULE data_sensor_r82 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2015-12-01' AND dasn_datetime < DATE '2016-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p82 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p83 
(CHECK ( dasn_datetime >= DATE '2016-01-01' AND dasn_datetime < DATE '2016-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i83 ON data_sensor_p83 (dasn_datetime);
CREATE RULE data_sensor_r83 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-01-01' AND dasn_datetime < DATE '2016-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p83 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p84 
(CHECK ( dasn_datetime >= DATE '2016-02-01' AND dasn_datetime < DATE '2016-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i84 ON data_sensor_p84 (dasn_datetime);
CREATE RULE data_sensor_r84 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-02-01' AND dasn_datetime < DATE '2016-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p84 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p85 
(CHECK ( dasn_datetime >= DATE '2016-03-01' AND dasn_datetime < DATE '2016-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i85 ON data_sensor_p85 (dasn_datetime);
CREATE RULE data_sensor_r85 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-03-01' AND dasn_datetime < DATE '2016-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p85 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p86 
(CHECK ( dasn_datetime >= DATE '2016-04-01' AND dasn_datetime < DATE '2016-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i86 ON data_sensor_p86 (dasn_datetime);
CREATE RULE data_sensor_r86 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-04-01' AND dasn_datetime < DATE '2016-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p86 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p87 
(CHECK ( dasn_datetime >= DATE '2016-05-01' AND dasn_datetime < DATE '2016-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i87 ON data_sensor_p87 (dasn_datetime);
CREATE RULE data_sensor_r87 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-05-01' AND dasn_datetime < DATE '2016-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p87 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p88 
(CHECK ( dasn_datetime >= DATE '2016-06-01' AND dasn_datetime < DATE '2016-07-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i88 ON data_sensor_p88 (dasn_datetime);
CREATE RULE data_sensor_r88 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-06-01' AND dasn_datetime < DATE '2016-07-01' )
DO INSTEAD
    INSERT INTO data_sensor_p88 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p89 
(CHECK ( dasn_datetime >= DATE '2016-07-01' AND dasn_datetime < DATE '2016-08-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i89 ON data_sensor_p89 (dasn_datetime);
CREATE RULE data_sensor_r89 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-07-01' AND dasn_datetime < DATE '2016-08-01' )
DO INSTEAD
    INSERT INTO data_sensor_p89 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p90 
(CHECK ( dasn_datetime >= DATE '2016-08-01' AND dasn_datetime < DATE '2016-09-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i90 ON data_sensor_p90 (dasn_datetime);
CREATE RULE data_sensor_r90 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-08-01' AND dasn_datetime < DATE '2016-09-01' )
DO INSTEAD
    INSERT INTO data_sensor_p90 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p91 
(CHECK ( dasn_datetime >= DATE '2016-09-01' AND dasn_datetime < DATE '2016-10-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i91 ON data_sensor_p91 (dasn_datetime);
CREATE RULE data_sensor_r91 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-09-01' AND dasn_datetime < DATE '2016-10-01' )
DO INSTEAD
    INSERT INTO data_sensor_p91 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p92 
(CHECK ( dasn_datetime >= DATE '2016-10-01' AND dasn_datetime < DATE '2016-11-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i92 ON data_sensor_p92 (dasn_datetime);
CREATE RULE data_sensor_r92 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-10-01' AND dasn_datetime < DATE '2016-11-01' )
DO INSTEAD
    INSERT INTO data_sensor_p92 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p93 
(CHECK ( dasn_datetime >= DATE '2016-11-01' AND dasn_datetime < DATE '2016-12-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i93 ON data_sensor_p93 (dasn_datetime);
CREATE RULE data_sensor_r93 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-11-01' AND dasn_datetime < DATE '2016-12-01' )
DO INSTEAD
    INSERT INTO data_sensor_p93 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p94 
(CHECK ( dasn_datetime >= DATE '2016-12-01' AND dasn_datetime < DATE '2017-01-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i94 ON data_sensor_p94 (dasn_datetime);
CREATE RULE data_sensor_r94 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2016-12-01' AND dasn_datetime < DATE '2017-01-01' )
DO INSTEAD
    INSERT INTO data_sensor_p94 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p95 
(CHECK ( dasn_datetime >= DATE '2017-01-01' AND dasn_datetime < DATE '2017-02-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i95 ON data_sensor_p95 (dasn_datetime);
CREATE RULE data_sensor_r95 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2017-01-01' AND dasn_datetime < DATE '2017-02-01' )
DO INSTEAD
    INSERT INTO data_sensor_p95 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p96 
(CHECK ( dasn_datetime >= DATE '2017-02-01' AND dasn_datetime < DATE '2017-03-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i96 ON data_sensor_p96 (dasn_datetime);
CREATE RULE data_sensor_r96 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2017-02-01' AND dasn_datetime < DATE '2017-03-01' )
DO INSTEAD
    INSERT INTO data_sensor_p96 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p97 
(CHECK ( dasn_datetime >= DATE '2017-03-01' AND dasn_datetime < DATE '2017-04-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i97 ON data_sensor_p97 (dasn_datetime);
CREATE RULE data_sensor_r97 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2017-03-01' AND dasn_datetime < DATE '2017-04-01' )
DO INSTEAD
    INSERT INTO data_sensor_p97 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p98 
(CHECK ( dasn_datetime >= DATE '2017-04-01' AND dasn_datetime < DATE '2017-05-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i98 ON data_sensor_p98 (dasn_datetime);
CREATE RULE data_sensor_r98 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2017-04-01' AND dasn_datetime < DATE '2017-05-01' )
DO INSTEAD
    INSERT INTO data_sensor_p98 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );

CREATE TABLE data_sensor_p99 
(CHECK ( dasn_datetime >= DATE '2017-05-01' AND dasn_datetime < DATE '2017-06-01' ) ) INHERITS (data_sensor);
CREATE INDEX dasn_datetime_i99 ON data_sensor_p99 (dasn_datetime);
CREATE RULE data_sensor_r99 AS
ON INSERT TO data_sensor WHERE
    ( dasn_datetime >= DATE '2017-05-01' AND dasn_datetime < DATE '2017-06-01' )
DO INSTEAD
    INSERT INTO data_sensor_p99 VALUES (NEW.DASN_ID
 					,NEW.DASN_UID
					,NEW.DASN_DATETIME
					,NEW.DASN_LATITUDE
					,NEW.DASN_LONGITUDE
					,NEW.DASN_STATUS
					,NEW.DASN_SAT_USED
					,NEW.DASN_ZONE_ALARM
					,NEW.DASN_MACRO_ID
					,NEW.DASN_MACRO_SRC
					,NEW.DASN_SOG
					,NEW.DASN_COURSE
					,NEW.DASN_HDOP
					,NEW.DASN_HGEO
					,NEW.DASN_HMET
					,NEW.DASN_GPIO
					,NEW.DASN_ADC
					,NEW.DASN_TEMP
					,NEW.DASN_TYPE
					,NEW.DASN_XML
					,NEW.DASN_DTM
					,NEW.DASN_SPSN_ID
					,NEW.DASN_VEHICLE
                                        );




CREATE TABLE QUEUE_MODULE_EXEC
 (QUMX_COMMAND TEXT NOT NULL
 ,QUMX_STATUS INTEGER NOT NULL
 ,QUMX_DATE TIMESTAMP NOT NULL
 ,QUMX_SPMD_ID INT8
 ,QUMX_STATUS_EXEC INT
 ,QUMX_RESULT TEXT
 ,QUMX_DATE_EXEC TIMESTAMP
 ,QUMX_USER VARCHAR(240)
 ,QUMX_ID INT8 NOT NULL
 )
 WITHOUT OIDS 
 TABLESPACE USER_DATA
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_COMMAND IS 'Команда'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_STATUS IS 'Состояние команды'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_DATE IS 'Дата постановки в очередь'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_STATUS_EXEC IS 'Статус исполнения'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_RESULT IS 'Результат возврата оборудования'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_DATE_EXEC IS 'Дата исполнения'
;

COMMENT ON COLUMN QUEUE_MODULE_EXEC.QUMX_USER IS 'Пользователь поставивиший команду'
;

CREATE TABLE EVENT_LOG 
 (EVLG_ID BIGINT DEFAULT NEXTVAL ('evlg_seq'::regclass)
 ,EVLG_TYPE INTEGER NOT NULL
 ,EVLG_DT TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL
 ,EVLG_USER VARCHAR (20) NOT NULL
 ,EVLG_SCHEME VARCHAR (50) NOT NULL
 ,EVLG_VERSION VARCHAR (50) NOT NULL
 ,EVLG_MODTYPE INTEGER NOT NULL
 ,EVLG_MODNAME VARCHAR (50) NOT NULL
 ,EVLG_PREFIX_CODE VARCHAR (4) NOT NULL
 ,EVLG_CODE INT8 NOT NULL
 ,EVLG_TEXT TEXT NOT NULL
 ,EVLG_INFO TEXT
 ,EVLG_REPEAT INTEGER NOT NULL
 )
 TABLESPACE USER_DATA
;


COMMENT ON COLUMN EVENT_LOG.EVLG_ID IS 'Идентификатор события'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_TYPE IS 'Тип события'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_DT IS 'Дата и время события'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_USER IS  'Пользователь'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_SCHEME IS 'Имя схемы'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_VERSION IS 'Версия системы Новоскан'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_MODTYPE IS 'Тип модуля источника'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_MODNAME IS 'Имя модуля источника'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_PREFIX_CODE IS 'Префикс для аббревиатуры'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_CODE IS 'Код события, код ошибки'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_TEXT IS 'Текст события'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_INFO IS 'Дополнительная информация'
;
COMMENT ON COLUMN EVENT_LOG.EVLG_REPEAT IS 'Количество повторений событий'
;


CREATE TABLE ATTRIBUTES
 (ATTR_ID BIGINT NOT NULL,
  ATTR_NAME CHARACTER VARYING(30),
  ATTR_TYPE CHARACTER VARYING(1) NOT NULL,
  CONSTRAINT ATTR_PK PRIMARY KEY (ATTR_ID),
  CONSTRAINT ATTRIBUTES_ATTR_NAME_KEY UNIQUE (ATTR_NAME)
 ) TABLESPACE USER_DATA;

CREATE TABLE PROFILES
 (PROF_ID BIGINT NOT NULL,
  PROF_ACCT_ID BIGINT NOT NULL,
  PROF_ATTR_ID BIGINT NOT NULL,
  PROF_DATE TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
  PROF_VALUEN NUMERIC NOT NULL DEFAULT 0,
  PROF_VALUEV CHARACTER VARYING(1024),
  PROF_VALUED TIMESTAMP WITHOUT TIME ZONE,
  PROF_XML XML NOT NULL DEFAULT '<profile/>',
  CONSTRAINT PROF_PK PRIMARY KEY (PROF_ID ),
  CONSTRAINT PROFILES_PROF_ACCT_ID_FKEY FOREIGN KEY (PROF_ACCT_ID)
      REFERENCES OWNER_TRACK.ACCOUNTS (ACCT_ID) MATCH SIMPLE
      ON UPDATE RESTRICT ON DELETE RESTRICT,
  CONSTRAINT PROFILES_PROF_ATTR_ID_FKEY FOREIGN KEY (PROF_ATTR_ID)
      REFERENCES OWNER_TRACK.ATTRIBUTES (ATTR_ID) MATCH SIMPLE
      ON UPDATE RESTRICT ON DELETE RESTRICT

 ) TABLESPACE USER_DATA;


CREATE TABLE ROLES
 (ROLE_ID BIGINT NOT NULL CONSTRAINT ROLE_PK UNIQUE
 ,ROLE_NAME VARCHAR(30) NOT NULL UNIQUE
 ,ROLE_DESC TEXT
 ,ROLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
 ,PRIMARY KEY (ROLE_ID)
) TABLESPACE USER_DATA;

COMMENT ON COLUMN ROLES.ROLE_NAME IS 'Имя роли';
COMMENT ON COLUMN ROLES.ROLE_DESC IS 'Описание роли';

CREATE TABLE ACCOUNT_ROLES
 (ACRL_ID BIGINT NOT NULL CONSTRAINT ACRL_PK UNIQUE
 ,ACRL_ACCT_ID BIGINT NOT NULL
 ,ACRL_ROLE_ID BIGINT NOT NULL
 ,PRIMARY KEY (ACRL_ID)
 ,CONSTRAINT ACRL_UK UNIQUE (ACRL_ACCT_ID, ACRL_ROLE_ID)
 ) TABLESPACE USER_DATA;


COMMENT ON COLUMN ACCOUNT_ROLES.ACRL_ID IS 'ИД';


CREATE TABLE REQUEST
 (REQ_ID BIGINT NOT NULL CONSTRAINT REQ_PK UNIQUE
 ,REQ_ACCT_ID BIGINT NOT NULL
 ,REQ_SPOB_ID BIGINT NOT NULL
 ,REQ_NAME VARCHAR(60) NOT NULL
 ,REQ_DESC TEXT
 ,REQ_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
 ,REQ_DATE_MODIFY TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
 ,REQ_DATE_BEGIN TIMESTAMP NOT NULL
 ,REQ_DATE_END TIMESTAMP
 ,REQ_DELTA NUMERIC DEFAULT 1.13 NOT NULL
 ,PRIMARY KEY (REQ_ID)
 ) TABLESPACE USER_DATA;

COMMENT ON COLUMN request.req_id IS 'Ид заявки';
COMMENT ON COLUMN request.req_name IS 'Имя заявки';
COMMENT ON COLUMN request.req_desc IS 'Описание';
COMMENT ON COLUMN request.req_date IS 'Дата создания заявки';
COMMENT ON COLUMN request.req_date_modify IS 'Дата модификации заявки';
COMMENT ON COLUMN request.req_date_begin IS 'Дата начала заявки';
COMMENT ON COLUMN request.req_date_end IS 'Дата окончания заявки';
COMMENT ON COLUMN request.req_delta IS 'Процент увеличения дистанции заложенный при расчёте фактической дистанции';

CREATE TABLE REQUEST_ROUTE
 (REQR_ID BIGINT NOT NULL CONSTRAINT REQR_PK UNIQUE
 ,REQR_REQ_ID BIGINT NOT NULL
 ,REQR_REQR_ID BIGINT
 ,REQR_POINT_NAME VARCHAR(256) NOT NULL
 ,REQR_DATE_ARRIVAL TIMESTAMP NOT NULL
 ,REQR_TIME_STAY BIGINT DEFAULT 0 NOT NULL
 ,REQR_DISTANCE NUMERIC DEFAULT 0 NOT NULL
 ,REQR_RATE NUMERIC DEFAULT 0 NOT NULL
 ,REQR_PRICE NUMERIC
 ,PRIMARY KEY (REQR_ID)
 ) TABLESPACE USER_DATA;


COMMENT ON COLUMN request_route.reqr_id IS 'Ид';
COMMENT ON COLUMN request_route.reqr_req_id IS 'Ид заявки';
COMMENT ON COLUMN request_route.reqr_reqr_id IS 'Ид';
COMMENT ON COLUMN request_route.reqr_point_name IS 'Имя нас пункта';
COMMENT ON COLUMN request_route.reqr_date_arrival IS 'Ожидаемая дата прибытия в точку.';
COMMENT ON COLUMN request_route.reqr_time_stay IS 'Ожидание стоянки в секундах.';
COMMENT ON COLUMN request_route.reqr_distance IS 'Дистанция в км от предыдущей точки';
COMMENT ON COLUMN request_route.reqr_rate IS 'Ставка';
COMMENT ON COLUMN request_route.reqr_price IS 'Расчитанная стоимость километра';







CREATE TABLE DATA_SENSOR_VALUES
(DASV_ID BIGINT NOT NULL DEFAULT NEXTVAL('DASV_SEQ')
,DASV_SPMD_ID BIGINT NOT NULL
,DASV_DASN_ID BIGINT
,DASV_KEY  VARCHAR(10) NOT NULL
,DASV_VALUE NUMERIC
,DASV_DATETIME TIMESTAMP NOT NULL
,PRIMARY KEY (DASV_ID)
) TABLESPACE USER_DATA;

CREATE TABLE DATA_SENSOR_LAST_VALUES
(DALV_ID BIGINT NOT NULL DEFAULT NEXTVAL('DALV_SEQ')
,DALV_SPMD_ID BIGINT NOT NULL
,DALV_DASL_ID BIGINT
,DALV_KEY  VARCHAR(10) NOT NULL
,DALV_VALUE NUMERIC
,DALV_DATETIME TIMESTAMP NOT NULL
,DALV_DTM TIMESTAMP NOT NULL
,CONSTRAINT DALV_DASL_KEY_UK UNIQUE (DALV_SPMD_ID, DALV_KEY)
,PRIMARY KEY (DALV_ID)
) TABLESPACE USER_DATA;



CREATE TABLE SPRV_REPORTS
(SPRP_ID BIGINT NOT NULL
,SPRP_NAME VARCHAR(256) NOT NULL
,SPRP_SOURCE VARCHAR(256) NOT NULL
,SPRP_DESC TEXT
,SPRP_SPRT_ID BIGINT NOT NULL
,CONSTRAINT SPRP_PK PRIMARY KEY (SPRP_ID)
  USING INDEX TABLESPACE USER_IND
,CONSTRAINT SPRP_NAME_UK UNIQUE (SPRP_NAME)
) TABLESPACE USER_DATA;


CREATE TABLE SPRV_REPORT_TYPES
(SPRT_ID BIGINT NOT NULL
,SPRT_NAME VARCHAR(30) NOT NULL
,SPRT_DESC TEXT
,CONSTRAINT SPRT_PK PRIMARY KEY (SPRT_ID)
  USING INDEX TABLESPACE USER_IND
) TABLESPACE USER_DATA;

-- Параметры отчётов
CREATE TABLE SPRV_REPORT_PARAMETERS
(SPPR_ID BIGINT NOT NULL UNIQUE
,SPPR_SPRP_ID BIGINT NOT NULL
,SPPR_NAME VARCHAR(100) NOT NULL
,SPPR_DESC VARCHAR(1024)
,SPPR_TYPE VARCHAR(100) NOT NULL
,SPPR_VALUEN NUMERIC
,SPPR_VALUED TIMESTAMP
,SPPR_VALUEV VARCHAR(1024)
,SPPR_HASH_MAP TEXT
,CONSTRAINT SPPR_PK PRIMARY KEY (SPPR_ID)
  USING INDEX TABLESPACE USER_IND
,CONSTRAINT valid_types CHECK (SPPR_TYPE IN ('LONG','DOUBLE', 'DATE', 'STRING', 'LIST_STRING'))
) TABLESPACE USER_DATA;

COMMENT ON TABLE SPRV_REPORT_PARAMETERS IS 'Параметры отчётов';
COMMENT ON COLUMN SPRV_REPORT_PARAMETERS.SPPR_SPRP_ID IS 'Cсылка на отчёт';
COMMENT ON COLUMN SPRV_REPORT_PARAMETERS.SPPR_NAME IS 'Имя параметра';
COMMENT ON COLUMN SPRV_REPORT_PARAMETERS.SPPR_DESC IS 'Описание параметра';
COMMENT ON COLUMN SPRV_REPORT_PARAMETERS.SPPR_TYPE IS 'Тип параметра';

