<project name="Novoscan" basedir="." default="war">
           <property environment="env"/>
           <property name="gwt.sdk" value="${env.GWT_HOME}"/>
           <fail unless="gwt.sdk" message="You must set the GWT_HOME environment variable to point to your GWT SDK"/>
	   <property name="dir.classes" location="war/WEB-INF/classes" />
	   <property name="dir.reports" location="war/WEB-INF/reports" />
	   <target name="version">
	      <path id="svnant.classpath">
		    <fileset dir="war/WEB-INF/lib">
			 <include name="**/*.jar"/>
		    </fileset>
	      </path>  

	      <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />
	      <svn>
		 <wcVersion path="." />
	      </svn>
	      <echo message="Revision Information:"/>
	      <echo message= "Subversion revision: ${revision.max}" />
	      <echo message= "Subversion repository url: ${repository.url}" />
	   </target>
	   <path id="project.class.path">
	      <pathelement location="${dir.classes}"/>
	      <pathelement location="${gwt.sdk}/gwt-user.jar"/>
              <pathelement location="${gwt.sdk}/gwt-user.jar"/>
	      <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
              <fileset dir="${gwt.sdk}" includes="validation-api-*.jar"/>
	      <!-- Add any additional non-server libs (such as JUnit) -->
	      <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
	   </path>
	   <target name="libs" description="Copy libs to WEB-INF/lib">
	      <mkdir dir="war/WEB-INF/lib" />
	      <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
	      <!-- Add any additional server libs that need to be copied -->
	      <mkdir dir="${dir.reports}" />
	      <copy todir="${dir.reports}">
		 <fileset dir="src/ru/novaris/novoscan/database" includes="*.jasper"/>
              </copy>
	      <!-- Create directory for Reports files -->
	      <mkdir dir="war/temp" />
	      <!-- Create directory for temporary files -->
	   </target>
	   <target name="reports" description="Create Reports Directory">
	      <mkdir dir="${dir.reports}" />
	      <copy todir="${dir.reports}">
		 <fileset dir="src/ru/novaris/novoscan/database" includes="*.jasper"/>
              </copy>
	      <!-- Create directory for Reports files -->
	   </target>
	   <target name="temp" description="Create temp">
	      <mkdir dir="war/temp" />
	      <!-- Create directory for temporary files -->
	   </target>

	   <target name="javac" depends="libs" description="Compile java source to ${dir.classes}">
	      <mkdir dir="${dir.classes}"/>
	      <javac srcdir="src" includes="**" encoding="utf-8"
	        destdir="${dir.classes}"
	        source="1.7" target="1.7" nowarn="true"
	        debug="true" debuglevel="lines,vars,source" includeantruntime="true">
		<classpath refid="project.class.path"/>
	      </javac>
	      <copy todir="${dir.classes}">
		<fileset dir="src" excludes="**/*.java"/>
	      </copy>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="jdbc:postgresql://127.0.0.1:6432/dbtrack" value="jdbc:postgresql://127.0.0.1:5432/dbtrack"/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;session-factory name=&quot;&quot;&gt;" value="&lt;session-factory name=&quot;hibernate/SessionFactory&quot;&gt;"/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;org.postgresql.Driver&lt;/property&gt;" value="&lt;property name=&quot;connection.datasource&quot;&gt;jdbc/DbTrackPool&lt;/property&gt;"/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;property name=&quot;hibernate.connection.password&quot;&gt;dctvgjrtlf&lt;/property&gt;" value=""/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:postgresql://127.0.0.1:5432/dbtrack&lt;/property&gt;" value=""/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;property name=&quot;hibernate.connection.username&quot;&gt;owner_track&lt;/property&gt;" value=""/>
	      <replace file="${dir.classes}/hibernate.cfg.xml" token="&lt;property name=&quot;hibernate.default_schema&quot;&gt;owner_track&lt;/property&gt;" value=""/>
	   </target>

	   <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
	      <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
		<classpath>
		  <pathelement location="src"/>
		  <path refid="project.class.path"/>
		</classpath>
		<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
		<jvmarg value="-Xmx600M"/>
		<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
		<arg value="ru.novaris.novoscan.Novoscan"/>
	      </java>
	   </target>
           <target name="hosted" depends="javac" description="Run hosted mode">
            <java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
              <classpath>
                <pathelement location="src"/>
                <path refid="project.class.path"/>
              </classpath>
              <jvmarg value="-Xmx600M"/>
              <arg value="-startupUrl"/>
              <arg value="index.html"/>
              <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
	      <arg value="ru.novaris.novoscan.Novoscan"/>
            </java>
           </target>


	   <target name="devmode" depends="javac" description="Run development mode">
	      <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
		<classpath>
		  <pathelement location="src"/>
		  <path refid="project.class.path"/>
		  <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
		  <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />
		</classpath>
		<jvmarg value="-Xmx256M"/>
		<arg value="-startupUrl"/>
		<arg value="Novoscan.html"/>
		<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
		<arg value="ru.novaris.novoscan.Novoscan"/>
	      </java>
	   </target>

	   <target name="eclipse.generate" depends="libs" description="Generate eclipse project">
	      <java failonerror="true" fork="true" classname="com.google.gwt.user.tools.WebAppCreator">
		<classpath>
		  <path refid="project.class.path"/>
		</classpath>
		<arg value="-XonlyEclipse"/>
		<arg value="-ignore"/>
		<arg value="ru.novaris.novoscan.client.Novoscan"/>
	      </java>
	   </target>

	
           <target name="build" depends="gwtc" description="Build this project" />
	   <target name="war" depends="build" description="Create a war file">
		<war basedir="war" destfile="Novoscan.war" webxml="war/WEB-INF/web.xml">
			  <!--		<exclude name="WEB-INF/**" />
					  <webinf dir="war/WEB-INF/">
						  <include name="**/*.jar" />
					  </webinf>
		  -->
		</war>
	   </target>

	   <target name="clean" description="Cleans this project">
	     <delete dir="${dir.classes}" failonerror="false" />
	     <delete dir="${dir.reports}" failonerror="false" />
	     <delete dir="war/novoscan" failonerror="false" />
	     <delete dir="gwt-unitCache" failonerror="false" />
	   </target>
</project>
